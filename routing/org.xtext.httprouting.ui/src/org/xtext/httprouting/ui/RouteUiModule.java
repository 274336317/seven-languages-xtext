/*
 * generated by Xtext
 */
package org.xtext.httprouting.ui;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.common.types.xtext.ui.ITypesProposalProvider;
import org.xtext.httprouting.ui.contentassist.ImportingTypesProposalProvider;

/**
 * Use this class to register components to be used within the IDE.
 */
public class RouteUiModule extends org.xtext.httprouting.ui.AbstractRouteUiModule {
	public RouteUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}
	
	@Override
	public Class<? extends ITypesProposalProvider> bindITypesProposalProvider() {
		return ImportingTypesProposalProvider.class;
	}

	@Override
	public Class<? extends org.eclipse.xtext.ui.editor.contentassist.IContentProposalProvider> bindIContentProposalProvider() {
		return org.xtext.httprouting.ui.contentassist.RouteProposalProviderXtend.class;
	}

	@Override
	public Class<? extends org.eclipse.jface.viewers.ILabelProvider> bindILabelProvider() {
		return org.xtext.httprouting.ui.labeling.RouteLabelProvider.class;
	}

	@Override
	public void configureResourceUIServiceLabelProvider(com.google.inject.Binder binder) {
		binder.bind(org.eclipse.jface.viewers.ILabelProvider.class).annotatedWith(org.eclipse.xtext.ui.resource.ResourceServiceDescriptionLabelProvider.class).to(org.xtext.httprouting.ui.labeling.RouteDescriptionLabelProvider.class);
	}

	public Class<? extends org.eclipse.xtext.ui.editor.outline.IOutlineTreeProvider> bindIOutlineTreeProvider() {
		return org.xtext.httprouting.ui.outline.RouteOutlineTreeProvider.class;
	}

	public Class<? extends org.eclipse.xtext.ui.editor.outline.impl.IOutlineTreeStructureProvider> bindIOutlineTreeStructureProvider() {
		return org.xtext.httprouting.ui.outline.RouteOutlineTreeProvider.class;
	}

}
