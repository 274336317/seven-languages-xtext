// Tree of Pythagoras - a fractal
// (a,b,c) have to form a pythagorean triple, i.e. a^2 + b^2 = c^2
begin
	val a = 3.0
	val b = 4.0
	val c = 5.0
	val length = 100.0
	
	val alpha = toDegrees(asin(a / c))
	val scaleA = a / c
	val scaleB = b / c
	
	delay = 0
	squares(length, alpha, scaleA, scaleB)
end

sub squares
	double length
	double alpha
	double scaleA
	double scaleB
begin 
	if(length > 6) {
		square(length)
		forward(length)
		turnLeft(alpha)
		squares(length * scaleB, alpha, scaleA, scaleB)
		turnRight(90)
		forward(length * scaleB)
		squares(length * scaleA, alpha, scaleA, scaleB)
		back(length * scaleB)
		turnRight(alpha - 90)
		back(length)
	} else {
		turnRight(90)
		penDown
		forward(length)
		penUp
		back(length)
		turnLeft(90)
	}
end	

sub square
	double length
begin
	penDown
	forward(length)
	turnRight(90)
	forward(length)
	turnRight(90)
	forward(length)
	turnRight(90)
	forward(length)
	turnRight(90)
	penUp
end
